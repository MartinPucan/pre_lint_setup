{
  "parserOptions": {
    "ecmaVersion": 13,
    "ecmaFeatures": {
      "jsx": true
    },
    "sourceType": "module"
  },
  "plugins": ["react", "prettier"],
  "settings": {
    "react": {
      "pragma": "React",
      "version": "18.0"
    }
  },
  "env": {
    "builtin": true,
    "es6": true,
    "browser": true,
    "node": true
  },
  "globals": {
    "console": false,
    "document": false,
    "navigator": false,
    "window": false
  },
  "overrides": [
    {
      "files": ["*.ts", "*.tsx"],
      "parser": "@typescript-eslint/parser",
      "plugins": [
        "@typescript-eslint",
        "react",
        "typescript-sort-keys",
        "@tanstack/query"
      ],
      "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@tanstack/eslint-plugin-query/recommended"
      ],
      "rules": {
        "indent": "off",
        "typescript-sort-keys/interface": "warn",
        "typescript-sort-keys/string-enum": "warn",
        "@typescript-eslint/no-explicit-any": "error",
        "@typescript-eslint/indent": ["error"],
        "@typescript-eslint/ban-ts-comment": "off",
        "@typescript-eslint/member-delimiter-style": [
          "warn",
          {
            "multiline": {
              "delimiter": "semi",
              "requireLast": true
            },
            "singleline": {
              "delimiter": "semi",
              "requireLast": true
            }
          }
        ],
        "@typescript-eslint/type-annotation-spacing": [
          "warn",
          {
            "before": false,
            "after": true,
            "overrides": {
              "arrow": {
                "before": true,
                "after": true
              },
              "variable": {
                "before": false,
                "after": false
              }
            }
          }
        ]
      }
    }
  ],
  "extends": [
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:compat/recommended",
    "prettier"
  ],
  "rules": {
    "prettier/prettier": "error",
    "arrow-spacing": [
      "warn",
      {
        "before": true,
        "after": true
      }
    ],
    "padding-line-between-statements": [
      "warn",
      {
        "blankLine": "always",
        "prev": "*",
        "next": ["block-like", "return"]
      },
      {
        "blankLine": "always",
        "prev": "block-like",
        "next": "*"
      }
    ],
    "block-scoped-var": "error",
    "curly": "warn",
    "no-eval": "error",
    "no-floating-decimal": "warn",
    "array-bracket-spacing": ["warn", "never"],
    "block-spacing": ["warn", "always"],
    "brace-style": ["warn", "stroustrup"],
    "indent": "off",
    "react/prop-types": "off",
    "quotes": "off",
    "semi": "off",
    "linebreak-style": ["warn", "unix"],
    "comma-spacing": [
      "warn",
      {
        "before": false,
        "after": true
      }
    ],
    "comma-style": ["warn", "last"],
    "computed-property-spacing": ["warn", "never"],
    "eol-last": "warn",
    "jsx-quotes": ["warn", "prefer-double"],
    "keyword-spacing": "warn",
    "lines-between-class-members": "warn",
    "no-multiple-empty-lines": "warn",
    "no-trailing-spaces": "warn",
    "no-whitespace-before-property": "warn",
    "semi-spacing": [
      "warn",
      {
        "before": false,
        "after": true
      }
    ],
    "space-before-blocks": [
      "warn",
      {
        "functions": "always",
        "keywords": "always",
        "classes": "always"
      }
    ],
    "space-in-parens": ["warn", "never"],
    "space-infix-ops": "warn",
    "spaced-comment": [
      "warn",
      "always",
      {
        "line": {
          "markers": ["/"],
          "exceptions": ["-", "+"]
        },
        "block": {
          "markers": ["!"],
          "exceptions": ["*"],
          "balanced": true
        }
      }
    ],
    "@typescript-eslint/no-unused-vars": [
      "warn",
      {
        "argsIgnorePattern": "^_$",
        "varsIgnorePattern": "^_$",
        "caughtErrorsIgnorePattern": "^_$"
      }
    ]
  }
}
